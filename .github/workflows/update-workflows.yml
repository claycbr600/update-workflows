name: Update Workflows

on:
  push:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        run: echo '${{ toJSON(github) }}'

      - name: Check out repository code
        uses: actions/checkout@v2

      - name: Set date
        id: date
        run: |
          date=$(date +%Y.%m.%d)
          echo "::set-output name=today::$date"

      - name: Get tag version
        uses: actions/github-script@v5
        id: tag-version
        with:
          result-encoding: string
          script: |
            const resp = await github.rest.git.listMatchingRefs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "tags/${{ steps.date.outputs.today }}"
            })
            if (resp.data.length == 0) {
              return "${{ steps.date.outputs.today }}.0"
            } else {
              let items = resp.data.map(item => item.ref.replace("refs/tags/", ""))
              let current_tag = items.sort().pop()
              let patch = current_tag.split('.').pop()
              return `${{ steps.date.outputs.today }}.${++patch}`
            }

      - name: Response output
        run: echo data = '${{ steps.tag-version.outputs.result }}'

      - name: Get release info
        uses: actions/github-script@v5
        id: release-info
        with:
          result-encoding: string
          script: |
            const script = require('./github-release.js')
            return script({ github, context })

      - name: Release output
        run: echo data = '${{ toJSON(steps.release-info.outputs.result) }}'

      - name: Create github release
        uses: actions/github-script@v5
        id: github-release
        with:
          script: |
            const tag_version = "${{ steps.tag-version.outputs.result }}"
            await github.rest.git.createTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag_version,
              message: `version ${tag_version}`,
              object: "${{ github.sha }}",
              type: "commit"
            })
            github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: tag_version,
              name: `Version ${tag_version}`,
              body: `${{ steps.release-info.outputs.result }}`
            })

      - name: GitHub release output
        run: echo data = '${{ toJSON(steps.github-release.outputs.result) }}'
