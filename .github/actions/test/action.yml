name: Close Issue

inputs:
  commit_sha:
    description: 'Commit sha of release tag'
    required: true
  token:
    description: 'Personal access token'
    required: true
  dry_run:
    description: 'Only print issues to close'
    type: boolean
    required: false
    default: false

runs:
  using: composite

  steps:
    - name: Get release tag from commit
      uses: actions/github-script@v5
      id: release-tag
      with:
        result-encoding: string
        script: |
          const commit_sha = "${{ inputs.commit_sha }}"
          const resp = await github.rest.repos.listTags({
            owner: context.repo.owner,
            repo: context.repo.repo
          })
          const tags = resp.data
          for (const tag of tags) {
            if (tag.commit.sha == commit_sha) {
              return tag.name
            }
          }

    - name: print release tag
      shell: bash
      run: echo "tag = ${{ steps.release-tag.outputs.result }}"

    - name: Set dry run param
      id: dry-run
      shell: bash
      run: |
        dry_run=${{ inputs.dry_run || false }}
        echo "::set-output name=result::$dry_run"
        if $dry_run; then
          echo "dry_run enabled"
        fi

    - name: Close release issues
      uses: actions/github-script@v5
      id: issues
      with:
        github-token: ${{ inputs.token }}
        script: |
          const fs = require('fs');
          const tag = "${{ steps.release-tag.outputs.result }}"
          const dry_run = ${{ steps.dry-run.outputs.result }}
          console.log(`dry_run = ${dry_run}`)
          const resp = await github.rest.repos.getReleaseByTag({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag: tag
          })
          const body = resp.data.body
          const regexp = /intellum\/[\w-]+\/issues\/\d+/g
          const issues = [...body.matchAll(regexp)].map(e => e[0])
          for (let issue of issues) {
            issue = issue.split('/')
            let repo = issue[1]
            let issue_number = issue[3]
            let message = `closing issue intellum/${repo}#${issue_number}`
            if (dry_run) {
              let content = `dry_run enabled, skip ${message}`
              console.log(content)
              fs.appendFile(process.env.GITHUB_STEP_SUMMARY, content)
              continue
            } else {
              console.log(message)
              fs.appendFile(process.env.GITHUB_STEP_SUMMARY, message)
              github.rest.issues.update({
                owner: context.repo.owner,
                repo: repo,
                issue_number: issue_number,
                state: "closed"
              })
            }
          }
